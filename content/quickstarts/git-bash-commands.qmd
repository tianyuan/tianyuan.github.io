---
title: "QuickStart"
author: "Yuan Tian"
date: "2022-10-18"
code-block-bg: true
code-block-border-left: "#31BAE9"
highlight-style: arrow
categories: [news, code, analysis]
---

# Git Bash

##  Regular Workflow

Assuming you already have the repo on your local machine. 

1. Be sure your local repo is up-to-date with the remote repo. 

**Two basic commands: `git pull` and `git push`.** The **`git pull`** can be divided into **`git fetch`** and **`git merge`**. 

A, then **a common workflow** will have 4 steps:

1. You **`ALWAYS`** need to be sure your local repo is up-to-date with the remote repo. 

```{.bash filename="Terminal"}
#Make sure there are no untracked files.
git status 

#Pull in all the files changed on the remote
git fetch

#Comfirm that all the files are ready to merge
git status

#A final step in pulling the remote changes into local machine
git merge

#A final "git status" to confirm everything is good to go
git status
```
2. With some modifications/changes in your working directory, it is time to inform Git about your new changes using **`git add -A`**.

```bash
#Stage all the changed or newly added files in the working directory
git add -A

#Confirm again.
git status
```

3. It's time to **`git commit -m`**!

```bash
git commit -m "this is my commit"

#Confirm again
git status
```

4. The final **`git push`** to the remote repository.

```bash
git push

# Confirm everything is up-to-date
git status
```


## Reference

* [Guide to Git Shell](http://dh.newtfire.org/explainGitShell.html)